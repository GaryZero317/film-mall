// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"mall/service/film/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/prices",
				Handler: getPriceListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/film"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/order",
				Handler: createHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/user/order/:id",
				Handler: userUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/order/:id",
				Handler: userGetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/order/list",
				Handler: userListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/photo/list",
				Handler: userPhotoListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/film"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPut,
				Path:    "/admin/order/:id",
				Handler: adminUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/admin/order/:id",
				Handler: adminGetHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/admin/order/list",
				Handler: adminListHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/admin/order/:id",
				Handler: adminDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin/photo/upload",
				Handler: uploadPhotoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/admin/photo/list",
				Handler: adminPhotoListHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/admin/photo/:id",
				Handler: deletePhotoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.AdminAuth.AccessSecret),
		rest.WithPrefix("/api/film"),
	)
}
